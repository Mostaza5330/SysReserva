/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BO.RestauranteBO;
import Fachada.HorarioRestauranteFCD;
import DTOs.RestauranteDTO;
import Excepciones.BOException;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author Sebastian Murrieta Verduzco - 233463
 */
public class Ajustes extends javax.swing.JFrame {

    /**
     * Creates new form Ajustes
     */
    public Ajustes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regresarBtn = new javax.swing.JButton();
        establecerHorarioBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        horaCierreTimePicker = new raven.datetime.component.time.TimePicker();
        horaInicioTimePicker = new raven.datetime.component.time.TimePicker();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        regresarBtn.setBackground(new java.awt.Color(201, 60, 32));
        regresarBtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        regresarBtn.setForeground(new java.awt.Color(255, 255, 255));
        regresarBtn.setText("Regresar");
        regresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(regresarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 540, 150, 50));

        establecerHorarioBtn.setBackground(new java.awt.Color(201, 60, 32));
        establecerHorarioBtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        establecerHorarioBtn.setForeground(new java.awt.Color(255, 255, 255));
        establecerHorarioBtn.setText("Establecer");
        establecerHorarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                establecerHorarioBtnActionPerformed(evt);
            }
        });
        getContentPane().add(establecerHorarioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 610, 150, 50));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Horario de apertura");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Horario de cierre");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 200, -1, -1));

        jPanel1.setBackground(new java.awt.Color(12, 11, 29));

        horaCierreTimePicker.setBackground(new java.awt.Color(29, 30, 51));
        horaCierreTimePicker.setForeground(new java.awt.Color(255, 255, 255));
        horaCierreTimePicker.setColor(new java.awt.Color(201, 60, 32));
        horaCierreTimePicker.setFocusCycleRoot(true);

        horaInicioTimePicker.setBackground(new java.awt.Color(29, 30, 51));
        horaInicioTimePicker.setForeground(new java.awt.Color(255, 255, 255));
        horaInicioTimePicker.setColor(new java.awt.Color(201, 60, 32));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Horario restaurante");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(horaInicioTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 541, Short.MAX_VALUE)
                .addComponent(horaCierreTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(420, 420, 420)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(83, 83, 83)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(horaInicioTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horaCierreTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarBtnActionPerformed
        new Admistrador().setVisible(true);
        dispose();
    }//GEN-LAST:event_regresarBtnActionPerformed

    private void establecerHorarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_establecerHorarioBtnActionPerformed
        try {
            // Obtener los tiempos seleccionados directamente como LocalTime
            LocalTime horaApertura = horaInicioTimePicker.getSelectedTime();
            LocalTime horaCierre = horaCierreTimePicker.getSelectedTime();

            // Validar que se hayan seleccionado las horas
            if (horaApertura == null || horaCierre == null) {
                throw new IllegalArgumentException("Debe seleccionar both horarios");
            }

            // Obtener las instancias necesarias
            HorarioRestauranteFCD horarioFachada = new HorarioRestauranteFCD();
            RestauranteBO restauranteBO = new RestauranteBO();
            RestauranteDTO restaurante = restauranteBO.consultar();

            // Establecer los horarios usando la fachada (ahora trabajando directamente con LocalTime)
            horarioFachada.establecerHoraApertura(restaurante, horaApertura);
            horarioFachada.establecerHoraCierre(restaurante, horaCierre);

            // Actualizar el restaurante en la base de datos
            restauranteBO.cambiarHoraRestaurante(horaApertura, horaCierre);

            // Convertir a String solo para mostrar el mensaje
            String mensajeExito = String.format("Horario actualizado exitosamente.\n"
                    + "Apertura: %s\nCierre: %s",
                    horarioFachada.formatearHoraParaMostrar(horaApertura),
                    horarioFachada.formatearHoraParaMostrar(horaCierre));

            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(this,
                    mensajeExito,
                    "Confirmación",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (BOException | IllegalArgumentException e) {
            // Manejar errores de lógica de negocio o validación
            JOptionPane.showMessageDialog(this,
                    e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_establecerHorarioBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton establecerHorarioBtn;
    private raven.datetime.component.time.TimePicker horaCierreTimePicker;
    private raven.datetime.component.time.TimePicker horaInicioTimePicker;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton regresarBtn;
    // End of variables declaration//GEN-END:variables
}
